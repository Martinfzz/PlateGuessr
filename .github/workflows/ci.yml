name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install global dependencies
        run: npm install

      - name: Install server dependencies
        run: cd server && npm install

      - name: Install client dependencies
        run: cd client && npm install

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install packages
        run: npm install

      - name: Lint code for consistent style
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: >
          --health-cmd "mongo --eval 'db.runCommand({ connectionStatus: 1 })'"
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: rootpassword

    steps:
      - name: Install packages
        run: npm install

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests server
        run: cd server && npm test

      - name: Run tests client
        run: cd client && npm test

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
